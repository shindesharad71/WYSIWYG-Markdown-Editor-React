{"version":3,"sources":["header/Header.js","editor/Editor.js","App.js","serviceWorker.js","index.js"],"names":["Header","Component","Editor","props","state","value","htmlState","handleChange","bind","updatePreview","makeBold","makeItalic","makeUnderline","makeH1","makeH2","makeH3","makeQuote","makeCaps","makeUpper","makeLower","makeHr","codeBlock","this","event","setState","target","marked","setTimeout","replace","window","getSelection","toString","toUpperCase","toLowerCase","capsCase","split","forEach","word","camelCaseWord","charAt","slice","length","className","onClick","cols","rows","wrap","onChange","onKeyUp","dangerouslySetInnerHTML","__html","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2SAGqBA,G,6KAGjB,OACE,oE,GAJ8BC,c,cCCfC,G,wDACpB,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACZC,MAAO,qCACPC,UAAW,IAGZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBAErB,EAAKE,SAAW,EAAKA,SAASF,KAAd,gBAChB,EAAKG,WAAa,EAAKA,WAAWH,KAAhB,gBAClB,EAAKI,cAAgB,EAAKA,cAAcJ,KAAnB,gBACrB,EAAKK,OAAS,EAAKA,OAAOL,KAAZ,gBACd,EAAKM,OAAS,EAAKA,OAAON,KAAZ,gBACd,EAAKO,OAAS,EAAKA,OAAOP,KAAZ,gBACd,EAAKQ,UAAY,EAAKA,UAAUR,KAAf,gBACjB,EAAKS,SAAW,EAAKA,SAAST,KAAd,gBAChB,EAAKU,UAAY,EAAKA,UAAUV,KAAf,gBACjB,EAAKW,UAAY,EAAKA,UAAUX,KAAf,gBACjB,EAAKY,OAAS,EAAKA,OAAOZ,KAAZ,gBACd,EAAKa,UAAY,EAAKA,UAAUb,KAAf,gBArBC,E,gEAyBlBc,KAAKb,kB,2CAILa,KAAKb,kB,mCAGOc,GACZD,KAAKE,SAAS,CACbnB,MAAOkB,EAAME,OAAOpB,MACpBC,UAAWoB,EAAOJ,KAAKlB,MAAMC,W,sCAId,IAAD,OACfsB,YAAW,WACV,IAAMrB,EAAYoB,EAAO,EAAKtB,MAAMC,OACpC,EAAKmB,SAAS,CAAElB,gBACd,M,iCAIHgB,KAAKE,SAAS,CACbnB,MAAOiB,KAAKlB,MAAMC,MAAMuB,QACvBC,OAAOC,eAAeC,WADhB,YAEDF,OAAOC,eAAeC,WAFrB,W,mCAQRT,KAAKE,SAAS,CACbnB,MAAOiB,KAAKlB,MAAMC,MAAMuB,QACvBC,OAAOC,eAAeC,WADhB,WAEFF,OAAOC,eAAeC,WAFpB,U,sCAQRT,KAAKE,SAAS,CACbnB,MAAOiB,KAAKlB,MAAMC,MAAMuB,QACvBC,OAAOC,eAAeC,WADhB,aAEAF,OAAOC,eAAeC,WAFtB,a,+BAQRT,KAAKE,SAAS,CACbnB,MAAOiB,KAAKlB,MAAMC,MAAMuB,QACvBC,OAAOC,eAAeC,WADhB,YAEDF,OAAOC,eAAeC,iB,+BAM7BT,KAAKE,SAAS,CACbnB,MAAOiB,KAAKlB,MAAMC,MAAMuB,QACvBC,OAAOC,eAAeC,WADhB,aAEAF,OAAOC,eAAeC,iB,+BAM9BT,KAAKE,SAAS,CACbnB,MAAOiB,KAAKlB,MAAMC,MAAMuB,QACvBC,OAAOC,eAAeC,WADhB,cAECF,OAAOC,eAAeC,iB,kCAM/BT,KAAKE,SAAS,CACbnB,MAAOiB,KAAKlB,MAAMC,MAAMuB,QACvBC,OAAOC,eAAeC,WADhB,YAEDF,OAAOC,eAAeC,iB,kCAM7BT,KAAKE,SAAS,CACbnB,MAAOiB,KAAKlB,MAAMC,MAAMuB,QACvBC,OAAOC,eAAeC,WADhB,UAEHF,OAAOC,eAAeC,WAAWC,oB,kCAMtCV,KAAKE,SAAS,CACbnB,MAAOiB,KAAKlB,MAAMC,MAAMuB,QACvBC,OAAOC,eAAeC,WADhB,UAEHF,OAAOC,eAAeC,WAAWE,oB,iCAMtC,IAAIC,EAAW,GACfL,OAAOC,eAAeC,WAAWI,MAAM,KAAKC,SAAQ,SAAAC,GACnD,IAAMC,EAAgBD,EAAKE,OAAO,GAAGP,cAAgBK,EAAKG,MAAM,GAAGP,cACnEC,EAAWA,EAASO,OAAT,UAAqBP,EAArB,YAAiCI,GAAkBA,KAG/DhB,KAAKE,SAAS,CACbnB,MAAOiB,KAAKlB,MAAMC,MAAMuB,QACvBC,OAAOC,eAAeC,WACtBG,O,+BAMFZ,KAAKE,SAAS,CACbnB,MAAM,GAAD,OAAKiB,KAAKlB,MAAMC,MAAhB,a,kCAKNiB,KAAKE,SAAS,CACbnB,MAAOiB,KAAKlB,MAAMC,MAAMuB,QACvBC,OAAOC,eAAeC,WADhB,UAEH,MAAQF,OAAOC,eAAeC,WAAa,Y,+BAMhD,OACC,6BACC,yBAAKW,UAAU,aACd,yBAAKA,UAAU,UACd,yBAAKA,UAAU,qBACd,4BAAQC,QAASrB,KAAKZ,UAAtB,KACA,4BAAQiC,QAASrB,KAAKX,YAAtB,KACA,4BAAQgC,QAASrB,KAAKV,eAAtB,KACA,4BAAQ+B,QAASrB,KAAKT,QAAtB,MACA,4BAAQ8B,QAASrB,KAAKR,QAAtB,MACA,4BAAQ6B,QAASrB,KAAKP,QAAtB,MACA,4BAAQ4B,QAASrB,KAAKN,WAAtB,SACA,4BAAQ2B,QAASrB,KAAKL,UAAtB,QACA,4BAAQ0B,QAASrB,KAAKJ,WAAtB,SACA,4BAAQyB,QAASrB,KAAKH,WAAtB,SACA,4BAAQwB,QAASrB,KAAKF,QAAtB,OACA,4BAAQuB,QAASrB,KAAKD,WAAtB,SAED,8BACCuB,KAAK,KACLC,KAAK,KACLC,KAAK,OACLzC,MAAOiB,KAAKlB,MAAMC,MAClB0C,SAAUzB,KAAKf,aACfyC,QAAS1B,KAAKb,iBAGhB,yBACCiC,UAAU,UACVO,wBAAyB,CACxBC,OAAQ5B,KAAKlB,MAAME,mB,GA7LUL,cCWrBkD,MATf,WACE,OACE,yBAAKT,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCEcU,QACW,cAA7BvB,OAAOwB,SAASC,UAEe,UAA7BzB,OAAOwB,SAASC,UAEhBzB,OAAOwB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2269264f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Header.css';\n\nexport default class Header extends Component {\n\n  render() {\n    return(\n      <h1>WYSIWYG Markdown Editor in React</h1>\n    )\n  }\n\n}","import React, { Component } from 'react';\nimport * as marked from 'marked';\nimport './Editor.css';\n\nexport default class Editor extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tvalue: '> # Do something awesome today...!',\n\t\t\thtmlState: '',\n\t\t};\n\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.updatePreview = this.updatePreview.bind(this);\n\n\t\tthis.makeBold = this.makeBold.bind(this);\n\t\tthis.makeItalic = this.makeItalic.bind(this);\n\t\tthis.makeUnderline = this.makeUnderline.bind(this);\n\t\tthis.makeH1 = this.makeH1.bind(this);\n\t\tthis.makeH2 = this.makeH2.bind(this);\n\t\tthis.makeH3 = this.makeH3.bind(this);\n\t\tthis.makeQuote = this.makeQuote.bind(this);\n\t\tthis.makeCaps = this.makeCaps.bind(this);\n\t\tthis.makeUpper = this.makeUpper.bind(this);\n\t\tthis.makeLower = this.makeLower.bind(this);\n\t\tthis.makeHr = this.makeHr.bind(this);\n\t\tthis.codeBlock = this.codeBlock.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updatePreview();\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.updatePreview();\n\t}\n\n\thandleChange(event) {\n\t\tthis.setState({\n\t\t\tvalue: event.target.value,\n\t\t\thtmlState: marked(this.state.value),\n\t\t});\n\t}\n\n\tupdatePreview() {\n\t\tsetTimeout(() => {\n\t\t\tconst htmlState = marked(this.state.value);\n\t\t\tthis.setState({ htmlState });\n\t\t}, 10);\n\t}\n\n\tmakeBold() {\n\t\tthis.setState({\n\t\t\tvalue: this.state.value.replace(\n\t\t\t\twindow.getSelection().toString(),\n\t\t\t\t`**${window.getSelection().toString()}**`\n\t\t\t),\n\t\t});\n\t}\n\n\tmakeItalic() {\n\t\tthis.setState({\n\t\t\tvalue: this.state.value.replace(\n\t\t\t\twindow.getSelection().toString(),\n\t\t\t\t`_${window.getSelection().toString()}_`\n\t\t\t),\n\t\t});\n\t}\n\n\tmakeUnderline() {\n\t\tthis.setState({\n\t\t\tvalue: this.state.value.replace(\n\t\t\t\twindow.getSelection().toString(),\n\t\t\t\t`<u>${window.getSelection().toString()}</u>`\n\t\t\t),\n\t\t});\n\t}\n\n\tmakeH1() {\n\t\tthis.setState({\n\t\t\tvalue: this.state.value.replace(\n\t\t\t\twindow.getSelection().toString(),\n\t\t\t\t`# ${window.getSelection().toString()}`\n\t\t\t),\n\t\t});\n\t}\n\n\tmakeH2() {\n\t\tthis.setState({\n\t\t\tvalue: this.state.value.replace(\n\t\t\t\twindow.getSelection().toString(),\n\t\t\t\t`## ${window.getSelection().toString()}`\n\t\t\t),\n\t\t});\n\t}\n\n\tmakeH3() {\n\t\tthis.setState({\n\t\t\tvalue: this.state.value.replace(\n\t\t\t\twindow.getSelection().toString(),\n\t\t\t\t`### ${window.getSelection().toString()}`\n\t\t\t),\n\t\t});\n\t}\n\n\tmakeQuote() {\n\t\tthis.setState({\n\t\t\tvalue: this.state.value.replace(\n\t\t\t\twindow.getSelection().toString(),\n\t\t\t\t`> ${window.getSelection().toString()}`\n\t\t\t),\n\t\t});\n\t}\n\n\tmakeUpper() {\n\t\tthis.setState({\n\t\t\tvalue: this.state.value.replace(\n\t\t\t\twindow.getSelection().toString(),\n\t\t\t\t`${window.getSelection().toString().toUpperCase()}`\n\t\t\t),\n\t\t});\n\t}\n\n\tmakeLower() {\n\t\tthis.setState({\n\t\t\tvalue: this.state.value.replace(\n\t\t\t\twindow.getSelection().toString(),\n\t\t\t\t`${window.getSelection().toString().toLowerCase()}`\n\t\t\t),\n\t\t});\n\t}\n\n\tmakeCaps() {\n\t\tlet capsCase = '';\n\t\twindow.getSelection().toString().split(' ').forEach(word => {\n\t\t\tconst camelCaseWord = word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n\t\t\tcapsCase = capsCase.length ? `${capsCase} ${camelCaseWord}` : camelCaseWord;\n\t\t});\n\n\t\tthis.setState({\n\t\t\tvalue: this.state.value.replace(\n\t\t\t\twindow.getSelection().toString(),\n\t\t\t\tcapsCase\n\t\t\t),\n\t\t});\n\t}\n\n\tmakeHr() {\n\t\tthis.setState({\n\t\t\tvalue: `${this.state.value}  ___`\n\t\t});\n\t}\n\n\tcodeBlock() {\n\t\tthis.setState({\n\t\t\tvalue: this.state.value.replace(\n\t\t\t\twindow.getSelection().toString(),\n\t\t\t\t`${\"```\" + window.getSelection().toString() + \"```\"}`\n\t\t\t),\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"editor\">\n\t\t\t\t\t\t<div className=\"toolbar btn-group\">\n\t\t\t\t\t\t\t<button onClick={this.makeBold}>B</button>\n\t\t\t\t\t\t\t<button onClick={this.makeItalic}>I</button>\n\t\t\t\t\t\t\t<button onClick={this.makeUnderline}>U</button>\n\t\t\t\t\t\t\t<button onClick={this.makeH1}>H1</button>\n\t\t\t\t\t\t\t<button onClick={this.makeH2}>H2</button>\n\t\t\t\t\t\t\t<button onClick={this.makeH3}>H3</button>\n\t\t\t\t\t\t\t<button onClick={this.makeQuote}>quote</button>\n\t\t\t\t\t\t\t<button onClick={this.makeCaps}>Caps</button>\n\t\t\t\t\t\t\t<button onClick={this.makeUpper}>Upper</button>\n\t\t\t\t\t\t\t<button onClick={this.makeLower}>Lower</button>\n\t\t\t\t\t\t\t<button onClick={this.makeHr}>---</button>\n\t\t\t\t\t\t\t<button onClick={this.codeBlock}>code</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tcols=\"80\"\n\t\t\t\t\t\t\trows=\"20\"\n\t\t\t\t\t\t\twrap=\"hard\"\n\t\t\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\tonKeyUp={this.updatePreview}\n\t\t\t\t\t\t></textarea>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"preview\"\n\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t__html: this.state.htmlState,\n\t\t\t\t\t\t}}\n\t\t\t\t\t></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport './App.css';\n\nimport Header from './header/Header';\nimport Editor from './editor/Editor';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Editor/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}